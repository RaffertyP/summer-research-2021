---
title: "Initial analysis"
author: "pablo paulsen"
date: "15/11/2021"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=9, fig.height=5) 
library(dplyr)
library(ggplot2)
library(tidyr)
library(quantmod)
library(forecast)
library(tseries)
```

```{r}
data = read.csv('../Ftf Efficiency Dataset/ftf_ev_efficiency_distance_models_20211006_v1.0.csv')[-1]


attach(data)
month_order = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
month_length = c(31,28,31,30,31,30,31,31,30,31,30,31)
head(data)

```

```{r}
str(data)
summary(data)
```
```{r}
data %>%
  group_by(year) %>% 
  summarise(count = n_distinct(vehicle))
```


```{r}
data %>%
  group_by(region) %>% 
  summarise(count =  n_distinct(vehicle)) %>% 
  arrange(-count)
```
can't really use before 2017
```{r}
mean_data = list()
for (i in 2017:2021) {
  mean_data[[i-2016]] = data[year == i,] %>% 
    group_by(month) %>% 
    summarise(mean_kwh = mean(kwh), mean_dist = mean(distance), median_kwh = median(kwh), median_dist = median(distance), mean_ef = mean(efficiency))
}
```


```{r Fig, echo=TRUE, fig.height=15, fig.width=15}
par(mfrow=c(3,2))
for (i in 2017:2021) {
  par(mar = c(4, 4, 2, 4))
  cur_year = data.frame(mean_data[[i-2016]])
  plot(cur_year$month, cur_year$mean_kwh, type = 'b', main = i, xlab = "Month", ylab = "kWh", xlim = c(1,12),
       ylim = c(min(c(cur_year$mean_kwh,cur_year$median_kwh)),max(c(cur_year$mean_kwh,cur_year$median_kwh))))
  points(cur_year$month, cur_year$median_kwh, type = 'b', col = 2)
  
  
  par(new=TRUE)
  plot(cur_year$month, cur_year$mean_dist, xlab="", ylab="", xlim = c(1,12),
      ylim = c(min(c(cur_year$mean_dist,cur_year$median_dist)),max(c(cur_year$mean_dist,cur_year$median_dist))), 
      axes=FALSE, type="b", col=4)
  mtext("Distance travelled (km)",side=4,col=4,line=3, cex = 0.7) 
  axis(4, ylim=c(min(c(cur_year$mean_dist,cur_year$median_dist)),max(c(cur_year$mean_dist,cur_year$median_dist))),
      col=4,col.axis=4)
  legend("topright", legend = c("Mean KWh", "Median kWh", "Mean Distance"), col = c(1:2,4), pch = 1)

}

```

```{r}
ggplot(data = data[year == 2018 & month == 6,], aes(x = kwh)) + geom_density(alpha = 0.5, adjust = 1)
#ggplot(data = patient, aes(x=age))+ geom_histogram(binwidth =10, color = "peachpuff3", fill = "hotpink") + xlab("age (years)") + ggtitle("histogram of patient Age") + theme_dark() + theme(tex = element_text(size = 20))

```

```{r Fig2, echo=TRUE, fig.height=15, fig.width=15}
par(mfrow=c(3,2))
for (i in 2017:2021) {
  par(mar = c(4, 4, 2, 4))
  cur_year = data.frame(mean_data[[i-2016]])
  plot(cur_year$month, cur_year$mean_ef, type = 'b', main = i, xlab = "Month", ylab = "kWh", xlim = c(1,12))
  points(cur_year$month, cur_year$median_kwh, type = 'b', col = 2)
}
```

```{r}
monthly_data = data[year >= 2017,] %>% 
  group_by(year, month) %>% 
  summarise(mean_kwh = mean(kwh), mean_dist = mean(distance), median_kwh = median(kwh), median_dist = median(distance), mean_ef = mean(efficiency))
monthly_data$m = 1:nrow(monthly_data)
```

```{r}
plot(x = monthly_data$m, y = monthly_data$mean_ef, type = 'l')
```

try a couple of models
```{r}
monthly_eff_lm = lm(mean_ef ~ m+factor(month),data = monthly_data)
summary(monthly_eff_lm)
```
```{r}
monthly_eff_qm = lm(mean_ef ~ m+I(m^2)+factor(month),data = monthly_data)
summary(monthly_eff_qm)
```
```{r}
monthly_eff_lm_log = lm(mean_ef ~ m+I(log(m))+factor(month),data = monthly_data)
summary(monthly_eff_lm_log)
```
```{r}
monthly_eff_qm_log = lm(mean_ef ~ m+I(log(m))+I(m^2)+factor(month),data = monthly_data)
summary(monthly_eff_qm_log)
```


```{r}
anova(monthly_eff_lm, monthly_eff_lm_log, monthly_eff_qm, monthly_eff_qm_log)
```




```{r}
par(mar = c(5, 4, 2, 1))
plot(monthly_data$m, monthly_data$mean_ef, type = 'l', xaxt = "n", xlab = "", ylab = "Mean effiency of EVs", main = "Time series of EV efficiencies")
lines(monthly_data$m, predict(monthly_eff_qm_log), col = 'red')

axis(1,labels = paste(monthly_data$year, monthly_data$month, sep = "-"), at = monthly_data$m, las = 2,srt = 35)

```

```{r}
plot(monthly_data$m, residuals(monthly_eff_lm), type = 'l')
points(monthly_data$m, residuals(monthly_eff_qm), type = 'l', col = "red")
points(monthly_data$m, residuals(monthly_eff_lm_log), type = 'l', col = "blue")
points(monthly_data$m, residuals(monthly_eff_qm_log), type = 'l', col = "darkgreen")



abline(h= 0)
```
```{r}
eff_series = ts(monthly_data$mean_ef, frequency = 12)
adf.test(eff_series, alternative = "stationary")
```

we can reject null hypothesis that data is not-stationary. this makes sense as average effiency should not have signficantly changed in a couple of years
```{r}

#decomp_eff = stl(eff_series, s.window = "periodic")
decomp_eff = decompose(eff_series, "additive")
plot(decomp_eff)
```
```{r}
plot(decomp_eff$seasonal)
```

```{r}
eff_model = auto.arima(eff_series) #uses AIC to get best model
summary(eff_model)
```
```{r}
efficiency_forcast = forecast(eff_model, level = 95, h = 60)
plot(efficiency_forcast)
```
```{r}
Box.test(efficiency_forcast$resid, lag=6, type="Ljung-Box")
```



```{r}
plot(x = monthly_data$m, y = monthly_data$median_kwh, type = 'l')

```
```{r}
monthly_kwh_lm = lm(median_kwh ~ m+factor(month),data = monthly_data)
summary(monthly_kwh_lm)
```

```{r}
par(mar = c(5, 4, 2, 1))
plot(monthly_data$m, monthly_data$median_kwh, type = 'l', xaxt = "n", xlab = "", ylab = "Mean power usage of EVs per day", main = "Time series of EV kWh Useage")
lines(monthly_data$m, predict(monthly_kwh_lm), col = 'red')

axis(1,labels = paste(monthly_data$year, monthly_data$month, sep = "-"), at = monthly_data$m, las = 2)
abline(v = 12, lty = 3)
abline(v = 24, lty = 3)
abline(v = 36, lty = 3)
abline(v = 48, lty = 3)
abline(v = 60, lty = 3)

```
```{r}
kwh_series = ts(monthly_data$median_kwh, frequency = 12)
decomp_kwh = stl(kwh_series, s.window = "periodic")
plot(decomp_kwh)
```

```{r}
adf.test(kwh_series, alternative = "stationary")
```
linear model time series but grouped by car model. turns out is basically useless and get more confident on the monthly effiencys by just using the average
```{r}
#monthly_data_model = data[year >= 2017,] %>% 
#  group_by(year, month, model) %>% 
#  summarise(mean_kwh = mean(kwh), mean_dist = mean(distance), median_kwh = median(kwh), median_dist = median(distance), mean_ef = mean(efficiency))
#monthly_data_model$m = as.numeric(factor(paste(monthly_data_model$year,monthly_data_model$month, sep = "-"),
#                                      levels = unique(paste(monthly_data_model$year,monthly_data_model$month, sep = "-"))))

```
```{r}
#monthly_eff_model_lm = lm(mean_ef ~ m+factor(month)+factor(model),data = monthly_data_model)
#summary(monthly_eff_model_lm)
```

```{r}
fuel_data = read.csv('Dunedin Fuel research/Dunedin fuel usage.csv')
head(fuel_data)
fuel_data$ï..month = factor(fuel_data$ï..month, levels = fuel_data$ï..month)
```

```{r}
plot(as.numeric(fuel_data$ï..month), fuel_data[,3], type = 'b', col = 1 ,xaxt = "n",
     ylim = c(min(fuel_data[,3:8]),max(fuel_data[,3:8])))
for (i in 3:8) {
  points(as.numeric(fuel_data$ï..month), fuel_data[,i], type = 'b', col = i-2 ,xaxt = "n")
  axis(1, labels = as.character(fuel_data$ï..month), at = as.numeric(fuel_data$ï..month))
}
```


```{r}
mean_fuel = fuel_data %>% 
  gather(key = "year", value = "Fuel_used", c("X2017","X2018","X2019")) %>% 
  group_by(ï..month) %>% 
  summarise(average_fuel_use = mean(Fuel_used))


power = c()
for (i in 1:12) {
  #average power useage (kWh/km)
  power[i] = mean(1/data[month==i & year >=2017 & year <= 2019,]$efficiency, na.rm = T)
}
mean_fuel$power_usage = power[c(7:12,1:6)]
mean_fuel
```

```{r}
par(mar = c(4, 4, 2, 4))
plot(as.numeric(mean_fuel$ï..month), mean_fuel$average_fuel_use, type = 'b', xaxt = "n",
     ylab = "Average fuel use of dunedin (L)", xlab = "month")
axis(1, labels = as.character(fuel_data$ï..month), at = as.numeric(fuel_data$ï..month))

par(new=TRUE)
plot(as.numeric(mean_fuel$ï..month), mean_fuel$power_usage, xlab="", ylab="", xlim = c(1,12),
    ylim=c(min(mean_fuel$power_usage),max(mean_fuel$power_usage)), 
    axes=FALSE, type="b", col=4)
mtext("Power Consumption of EV(kWh/km)",side=4,col=4,line=3, cex = 1) 
axis(4, ylim=c(min(mean_fuel$power_usage),max(mean_fuel$power_usage)),
    col=4,col.axis=4)
legend("bottomleft", legend = c("Average fuel use of dunedin", "Power Consumption of EV"), col = c(1, 4), pch = 1)

```

```{r}

plot(as.numeric(mean_fuel$ï..month), mean_fuel$average_fuel_use * mean_fuel$power_usage, type = 'b', xaxt = "n",
     ylab = "execpted energy use of EV (L kWh/ km) ", xlab = "month")
axis(1, labels = as.character(fuel_data$ï..month), at = as.numeric(fuel_data$ï..month))

```
numbers could probably put to some meaningful scale if use some scaler (L/km) like fuel efficiency of gas car then can just show kwh usage

```{r}
temp_data = read.csv('weather data/auckland_motat_ews_data.csv',stringsAsFactors = T)
temp_data$Month = factor(temp_data$Month, levels = unique(temp_data$Month))
head(temp_data,10)
```

```{r}
HDD = function (data, temp = 18) {
  mon_sum = data.frame(Year = NA, Month = NA, HDD = NA)[-1,]
  for (y in min(data$Year):max(data$Year)){
    for (m in unique(data[data$Year == y,]$Month)) {
      #print(paste(y," ", m))
      adj_temps = -data[data$Year == y & data$Month == m,]$Temp+temp
      #print(sum(adj_temps*(adj_temps > 0))/24)
      mon_sum[nrow(mon_sum) + 1,] = c(y,m, sum(adj_temps*(adj_temps > 0))/24)
    }
  }
  mon_sum$Year = as.factor(mon_sum$Year)
  mon_sum$Month = factor(mon_sum$Month, levels = month_order)
  mon_sum$HDD = as.numeric(mon_sum$HDD)
  return(mon_sum)
}

CDD = function (data, temp = 16) {
  mon_sum = data.frame(Year = NA, Month = NA, CDD = NA)[-1,]
  for (y in min(data$Year):max(data$Year)){
    for (m in levels(data$Month)) {
      #print(paste(y," ", m))
      adj_temps = data[data$Year == y & data$Month == m,]$Temp-temp
      #print(sum(adj_temps*(adj_temps > 0))/24)
      mon_sum[nrow(mon_sum) + 1,] = c(y,m, sum(adj_temps*(adj_temps > 0))/24)

    }
  }
  mon_sum$Year = as.factor(mon_sum$Year)
  mon_sum$Month = as.factor(mon_sum$Month)
  mon_sum$CDD = as.numeric(mon_sum$CDD)
  return(mon_sum)
}
```

```{r}
HDD_auckland = HDD(temp_data)

HDD_auckland
```

```{r}
CDD(temp_data, 20)
```
```{r}
mean_HDD_auckland = HDD_auckland %>% 
  group_by(Month) %>% 
  summarise(average_HDD = mean(HDD))

power = c()
eff = c()
kwh = c()
km = c()
for (i in 1:12) {
  #average power useage (kWh/km)
  power[i] = mean(1/data[month==i & region == "Auckland" & year >= 2017,]$efficiency, na.rm = T)
  eff[i] = mean(data[month==i & region == "Auckland" & year >= 2017,]$efficiency, na.rm = T)
  kwh[i] = mean(data[month==i & region == "Auckland" & year >= 2017,]$kwh, na.rm = T)
  km[i] = mean(data[month==i & region == "Auckland" & year >= 2017,]$distance, na.rm = T)
  
}

mean_HDD_auckland$power_usage = power
mean_HDD_auckland$efficiency = eff
mean_HDD_auckland$kwh = kwh
mean_HDD_auckland$km = km
mean_HDD_auckland
```

```{r}
par(mar = c(4, 4, 2, 4))
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$power_usage, type = 'b', xaxt = "n",
     ylab = "Power Consumption of EV(kWh/km)", xlab = "Month", main = "Auckland EV power consumption and Monthly Heating Days by Month")
axis(1, labels = as.character(mean_HDD_auckland$Month), at = as.numeric(mean_HDD_auckland$Month))

par(new=TRUE)
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$average_HDD, xlab="", ylab="", xlim = c(1,12),
    ylim=c(min(mean_HDD_auckland$average_HDD),max(mean_HDD_auckland$average_HDD)), 
    axes=FALSE, type="b", col=4)
mtext("Average Monthly Heating day",side=4,col=4,line=2, cex = 1) 
axis(4, ylim=c(min(mean_HDD_auckland$average_HDD),max(mean_HDD_auckland$average_HDD)),
    col=4,col.axis=4)
legend("topleft", legend = c( "Power Consumption of EV", "Monthly Heating days (Base temp 16°C)"), col = c(1, 4), pch = 1)
```

```{r}
par(mar = c(4, 4, 2, 4))
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$efficiency, type = 'b', xaxt = "n",
     ylab = "Average Efficiency of EV(km/kWh)", xlab = "Month", main = "Auckland EV Efficiency and Monthly Heating Days by Month")
axis(1, labels = as.character(mean_HDD_auckland$Month), at = as.numeric(mean_HDD_auckland$Month))

par(new=TRUE)
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$average_HDD, xlab="", ylab="", xlim = c(1,12),
    ylim=c(min(mean_HDD_auckland$average_HDD),max(mean_HDD_auckland$average_HDD)), 
    axes=FALSE, type="b", col=4)
mtext("Average Monthly Heating Degree Days (Base temp 16°C)",side=4,col=4,line=2, cex = 1) 
axis(4, ylim=c(min(mean_HDD_auckland$average_HDD),max(mean_HDD_auckland$average_HDD)),
    col=4,col.axis=4)
legend("topright", legend = c( "Efficiency of EV", "Monthly Heating Degree days"), col = c(1, 4), pch = 1)
```
linear model of efficiency and HDD with averages from 2017 to 2021 in Auckland
```{r}
avg_eff_HDD_auckland = data[data$year >=2017 & region == "Auckland",] %>%
  group_by(year, month) %>%
  summarise(efficiency = mean(efficiency), avg_kwh = mean(kwh))
avg_eff_HDD_auckland$HDD = HDD_auckland$HDD
head(avg_eff_HDD_auckland,10)
```

```{r}
all_lm = lm(data = avg_eff_HDD_auckland,efficiency~HDD)
summary(all_lm)
plot(avg_eff_HDD_auckland$HDD,avg_eff_HDD_auckland$efficiency)
abline(all_lm)
plot(all_lm)
```


linear model with efficiency and HDD of individual cars from 2017 to 2021 in Auckland, categorized by type of car
```{r}
auckland_model_count = data[region == "Auckland",] %>%
  group_by(model) %>% 
  summarise(count =  n_distinct(vehicle)) %>% 
  arrange(-count)
auckland_model_count

```

```{r}
eff_HDD_auckland = data[data$year >=2017 & region == "Auckland",]
#-2 just to check that values have in inputted correctly 
eff_HDD_auckland$HDD = rep(-2, nrow(eff_HDD_auckland))

for (y in min(eff_HDD_auckland$year):max(eff_HDD_auckland$year)){
  for (m in unique(eff_HDD_auckland[eff_HDD_auckland$year == y,]$month)) {
    eff_HDD_auckland[eff_HDD_auckland$year == y & eff_HDD_auckland$month == m,]$HDD = HDD_auckland$HDD[HDD_auckland$Year == y & as.numeric(HDD_auckland$Month) == m]
  }
}
eff_HDD_auckland$model = factor(eff_HDD_auckland$model, levels = auckland_model_count$model)
head(eff_HDD_auckland,10)
```
```{r}
all_lm = lm(data = eff_HDD_auckland,efficiency~HDD)
summary(all_lm)
plot(eff_HDD_auckland$HDD,eff_HDD_auckland$efficiency)
abline(all_lm)
plot(all_lm)
```

it is using the most common EV (Nissan Leaf (24 kWh) 2013-2016) as the base line.
even with many more predictors (vehicle type categories ) the Std. Error of the HDD predictor decreased so t-value has actually increased 
```{r}
all_mdl_lm = lm(data = eff_HDD_auckland, efficiency~HDD+model )
summary(all_mdl_lm)
plot(eff_HDD_auckland$HDD,eff_HDD_auckland$efficiency, col = eff_HDD_auckland$model)
abline(all_mdl_lm)
plot(all_mdl_lm, col = eff_HDD_auckland$model)
```
residual is well centered for each of the car and approx normal distribution except for a couple that have extremely low efficiency (hills, aggressive driving?)

```{r}
inter_mdl_lm = lm(data = eff_HDD_auckland, efficiency~HDD*model )
summary(inter_mdl_lm)
plot(eff_HDD_auckland$HDD,eff_HDD_auckland$efficiency, col = eff_HDD_auckland$model)
plot(all_mdl_lm, col = eff_HDD_auckland$model)
```


including model of car in model is worth it, interaction term anova says is significant but fit does not really improve and most are not significant. i.e not really worth being concerned about how different car respond to difference in temps
```{r}
anova(all_lm,all_mdl_lm, inter_mdl_lm)
```

```{r}
plot(avg_eff_HDD_auckland$month[avg_eff_HDD_auckland$year == 2017], avg_eff_HDD_auckland$avg_kwh[avg_eff_HDD_auckland$year == 2017],
     type = 'b', col = 1 , ylim = c(min(avg_eff_HDD_auckland$avg_kwh),max(avg_eff_HDD_auckland$avg_kwh)))
for (i in 2017:2021) {
  points(avg_eff_HDD_auckland$month[avg_eff_HDD_auckland$year == i], avg_eff_HDD_auckland$avg_kwh[avg_eff_HDD_auckland$year == i],
      type = 'b', col = i-2016 ,xaxt = "n", ylim = c(min(avg_eff_HDD_auckland$avg_kwh),max(avg_eff_HDD_auckland$avg_kwh)))
  
}
```


```{r}

par(mar = c(4, 4, 2, 4))
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$kwh, type = 'b', xaxt = "n",
     ylab = "average kWh usage", xlab = "Month", main = "Auckland EV average kWh usage and Monthly Heating Days by Month")
axis(1, labels = as.character(mean_HDD_auckland$Month), at = as.numeric(mean_HDD_auckland$Month))

par(new=TRUE)
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$average_HDD, xlab="", ylab="", xlim = c(1,12),
    ylim=c(min(mean_HDD_auckland$average_HDD),max(mean_HDD_auckland$average_HDD)), 
    axes=FALSE, type="b", col=4)
mtext("Average Monthly Heating Degree Days (Base temp 16°C)",side=4,col=4,line=2, cex = 1) 
axis(4, ylim=c(min(mean_HDD_auckland$average_HDD),max(mean_HDD_auckland$average_HDD)),
    col=4,col.axis=4)
legend("topleft", legend = c( "Average kWh usage", "Monthly Heating Degree days"), col = c(1, 4), pch = 1)
```
lockdowns make it too hard to see much meaningful pattern


```{r}
mean_HDD_auckland = HDD_auckland %>% 
  group_by(Month) %>% 
  summarise(average_HDD = mean(HDD))

power = c()
eff = c()
kwh = c()
km = c()
for (i in 1:12) {
  eff[i] = mean(data[month==i & region == "Auckland" & year >= 2017 & year <= 2019,]$efficiency, na.rm = T)
  kwh[i] = mean(data[month==i & region == "Auckland" & year >= 2017 & year <= 2019,]$kwh, na.rm = T)
  km[i] = mean(data[month==i & region == "Auckland" & year >= 2017 & year <= 2019,]$distance, na.rm = T)
}

mean_HDD_auckland$power_usage = power
mean_HDD_auckland$efficiency = eff
mean_HDD_auckland$kwh = kwh
mean_HDD_auckland$km = km
mean_HDD_auckland
```
```{r}
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$km/month_length, type = 'b', xaxt = "n",
     ylab = "average km driven per day", xlab = "Month", main = "Auckland EV km driven 2017-2019")
axis(1, labels = as.character(mean_HDD_auckland$Month), at = as.numeric(mean_HDD_auckland$Month))
```

```{r}

par(mar = c(4, 4, 2, 4))
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$kwh/month_length, type = 'b', xaxt = "n",
     ylab = "average kWh usage per day", xlab = "Month", main = "Auckland EV average kWh usage and Monthly Heating Days by Month 2017-2019")
axis(1, labels = as.character(mean_HDD_auckland$Month), at = as.numeric(mean_HDD_auckland$Month))

par(new=TRUE)
plot(as.numeric(mean_HDD_auckland$Month), mean_HDD_auckland$average_HDD/month_length, xlab="", ylab="", xlim = c(1,12),
    ylim=c(min(mean_HDD_auckland$average_HDD/month_length),max(mean_HDD_auckland$average_HDD/month_length)), 
    axes=FALSE, type="b", col=4)
mtext("Average Heating Degree Days per day (Base temp 16°C)",side=4,col=4,line=2, cex = 1) 
axis(4, ylim=c(min(mean_HDD_auckland$average_HDD),max(mean_HDD_auckland$average_HDD)),
    col=4,col.axis=4)
legend("topright", legend = c( "Average kWh usage", "Heating Degree days"), col = c(1, 4), pch = 1)
```

EV power used data goes to the contrary of the fuel usage data. 
while it is clear that efficiency decreases in the winter months going by fuel usage data total power used should be less in the winter as there is significantly more fuel usage in the summer.
is this cause petrol fuel efficiency is lower in summer (possibly due to AC), current EV drivers are different (early adopters or EV commute with 2nd petrol road trip car), or a regional thing?


```{r}
mean_HDD_not_auckland = HDD_auckland %>% 
  group_by(Month) %>% 
  summarise(average_HDD = mean(HDD))

power = c()
eff = c()
kwh = c()
for (i in 1:12) {
  eff[i] = mean(data[month==i & region != "Auckland" & year >= 2017 & year <= 2019,]$efficiency, na.rm = T)
  kwh[i] = mean(data[month==i & region != "Auckland" & year >= 2017 & year <= 2019,]$kwh, na.rm = T)
  
}

mean_HDD_not_auckland$power_usage = power
mean_HDD_not_auckland$efficiency = eff
mean_HDD_not_auckland$kwh = kwh
mean_HDD_not_auckland
```

```{r}
#not a fair plot as is using Auckland HDD against not auckland kwh
#just used to get an idea for power usage outside auckalnd
par(mar = c(4, 4, 2, 4))
plot(as.numeric(mean_HDD_not_auckland$Month), mean_HDD_not_auckland$kwh, type = 'b', xaxt = "n",
     ylab = "average kWh usage", xlab = "Month", main = "not Auckland EV average kWh usage and Monthly Heating Days by Month 2017-2019")
axis(1, labels = as.character(mean_HDD_not_auckland$Month), at = as.numeric(mean_HDD_not_auckland$Month))

par(new=TRUE)
plot(as.numeric(mean_HDD_not_auckland$Month), mean_HDD_not_auckland$average_HDD, xlab="", ylab="", xlim = c(1,12),
    ylim=c(min(mean_HDD_not_auckland$average_HDD),max(mean_HDD_not_auckland$average_HDD)), 
    axes=FALSE, type="b", col=4)
mtext("Average Monthly Heating Degree Days (Base temp 16°C)",side=4,col=4,line=2, cex = 1) 
axis(4, ylim=c(min(mean_HDD_not_auckland$average_HDD),max(mean_HDD_not_auckland$average_HDD)),
    col=4,col.axis=4)
legend("topright", legend = c( "Average kWh usage", "Monthly Heating Degree days"), col = c(1, 4), pch = 1)
```

excluding Auckland from the data it appears that it is not a regional thing therefore could be
petrol fuel efficiency is lower in summer (possibly) or current EV drivers are different (early adopters or EV commute with 2nd petrol road trip car)?
https://www.sciencedirect.com/science/article/pii/S1361920914000923
shows petrol fuel efficiency is lower in the winter

however 
https://www.proquest.com/docview/2131026877?pq-origsite=gscholar&fromopenview=true
cites paper 
https://www.sae.org/publications/technical-papers/content/2002-01-1957/
that AC accounts for 7% extra power usage 

```{r}
all_lm = lm(data = avg_eff_HDD_auckland,avg_kwh~HDD)
summary(all_lm)
plot(avg_eff_HDD_auckland$HDD,avg_eff_HDD_auckland$avg_kwh)
abline(all_lm)
plot(all_lm)
```


```{r}
all_mdl_lm = lm(data = eff_HDD_auckland, kwh~HDD+model )
summary(all_mdl_lm)
plot(eff_HDD_auckland$HDD,eff_HDD_auckland$kwh, col = eff_HDD_auckland$model)
abline(all_mdl_lm)
plot(all_mdl_lm, col = eff_HDD_auckland$model)
```
linear model to try to model kWh used by number of HDD in the month is effectively useless
only thing that can be seen is the cars that are driven more or less each month

```{r}
card_fuel = read.csv("Downloaded stats/fuel_usage_card_transactions_data.csv", header = T)
head(card_fuel)

fuel_cost = read.csv("Downloaded stats/MBIE_weekly_fuel_cost.csv")
fuel_cost$Week_ending_Friday = as.Date(fuel_cost$Week_ending_Friday)
fuel_cost$year = as.numeric(format(fuel_cost$Week_ending_Friday, '%Y'))
fuel_cost$month = as.numeric(format(fuel_cost$Week_ending_Friday, '%m'))
head(fuel_cost)
month_fuel_cost = fuel_cost %>% 
  group_by(year, month) %>% 
  summarise(petrol = mean(Regular_Petrol_discounted_retail_price_NZc.p.l), diesel = mean(Diesel_discounted_retail_price_NZc.p.l),
            Premium = mean(Premium_Petrol_95R_discounted_retail_price_NZc.p.l))
head(month_fuel_cost)

card_fuel = merge(card_fuel, month_fuel_cost, by = c("year", "month"), sort = FALSE)
card_fuel = card_fuel[card_fuel$year != 2004,]
head(card_fuel)
```

```{r}
#plot(card_fuel$month[card_fuel$year == 2005],card_fuel$fuel_purchased[card_fuel$year == 2005],
#     type = 'b', col = 1 , ylim = c(min(card_fuel$fuel_purchased),max(card_fuel$fuel_purchased)))
#for (i in min(card_fuel$year):max(card_fuel$year)) {
#  points(card_fuel$month[card_fuel$year == i],card_fuel$fuel_purchased[card_fuel$year == i],
#     type = 'b', col = i+1-min(card_fuel$year) )
#  
#}
```
effect of lockdown is very obvious so probably have to remove 2020-2021
```{r}
mean_card_fuel = card_fuel[card_fuel$year <=2019,] %>% 
  group_by(month) %>% 
  summarise(avg_fuel_purchased = mean(fuel_purchased))
head(mean_card_fuel)

plot(mean_card_fuel$month, mean_card_fuel$avg_fuel_purchased/month_length, type = 'b', xlab= 'month', ylab = 'Average Fuel Purchases per day (Million $)')
```

money spent shows a very clear upwards trend towards December (trips). with a valley in the winter. interesting that jan is lowest point. maybe new years resolutions to bike/walk or no school and not as many trips as dec?

```{r}
card_fuel_series = ts((card_fuel$fuel_purchased/card_fuel$petrol)/month_length, frequency = 12)
plot(card_fuel_series)
```

```{r}
card_fuel_decomp = decompose(card_fuel_series, "multiplicative")
plot(card_fuel_decomp, xaxt = "n")
axis(1, labels = 2005:2021, at =1:17, outer = T, pos = 0.520)
abline(v = 1, )
card_fuel_model = auto.arima(card_fuel_series) #uses AIC to get best model
summary(card_fuel_model)
plot(forecast(card_fuel_model, level = 95, h = 40))
```
```{r}
plot(card_fuel_decomp$figure, type = 'l')
```


